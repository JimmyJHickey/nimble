Currently for nimble, we drop a few tweaks into CppAD.

These are primarily necessary due to nimble's compilation situation, which involves crossing over compilation units.  (This is not ideal, but it has not caused problems.)  The problem is that CppAD uses several static variables, for which each compilation unit only sees its own instance.

When updating CppAD, it should be sufficient to search all file names and all file code for "nimble" to find necessary modifications.  A summary of these is the following.

1. In core, add the files nimble_ADbase_extensions.hpp and nimble_ADbase_tape_link_extensions.hpp.
2. In ad.hpp, at the start of the "static public member functions" (in comment) section, add "#include nimble_ADbase_extensions.hpp".
3. In tape_link.hpp, as the first line inside of "namespace CppAD", add "#include nimble_ADbase_tape_link_extensions.hpp"
4. In local, add the file nimble_atomic_index.hpp
5. In atomic_index.hpp, as the first line of atomic_index, replace
    static std::vector<atomic_index_info> vec;
with
#ifndef USING_CPPAD_IN_NIMBLE
    static std::vector<atomic_index_info> vec;
#else
    std::vector<atomic_index_info> &vec = *atomic_index_info_vec_manager_nimble<Base>::manage();
#endif
6. We previously commented out the function check_for_nan in check_for_nan.hpp, but in updated CppAD this appears to be moot.
